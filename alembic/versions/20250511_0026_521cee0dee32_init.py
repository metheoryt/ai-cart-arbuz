"""init

Revision ID: 521cee0dee32
Revises:
Create Date: 2025-05-11 00:26:02.988025

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "521cee0dee32"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "category",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("uri", sa.String(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["category.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "feature",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "product",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("producer_country", sa.String(), nullable=True),
        sa.Column("brand_name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("image_url", sa.String(), nullable=True),
        sa.Column("measure", sa.String(), nullable=False),
        sa.Column("is_weighted", sa.Boolean(), nullable=False),
        sa.Column("weight_avg", sa.Float(), nullable=False),
        sa.Column("weight_min", sa.Float(), nullable=False),
        sa.Column("weight_max", sa.Float(), nullable=False),
        sa.Column("weight", sa.String(), nullable=True),
        sa.Column("piece_weight_max", sa.Float(), nullable=False),
        sa.Column("piece_weight_min", sa.Float(), nullable=False),
        sa.Column("sell_by_piece", sa.Boolean(), nullable=False),
        sa.Column("quantity_min_step", sa.Float(), nullable=False),
        sa.Column("price_actual", sa.Float(), nullable=False),
        sa.Column("price_special", sa.Integer(), nullable=True),
        sa.Column("price_previous", sa.String(), nullable=True),
        sa.Column("is_available", sa.Boolean(), nullable=False),
        sa.Column("is_local", sa.Boolean(), nullable=False),
        sa.Column("nutrition_fats", sa.Float(), nullable=True),
        sa.Column("nutrition_carbs", sa.Float(), nullable=True),
        sa.Column("nutrition_protein", sa.Float(), nullable=True),
        sa.Column("nutrition_kcal", sa.Float(), nullable=True),
        sa.Column("ingredients", sa.String(), nullable=True),
        sa.Column("storage_conditions", sa.String(), nullable=True),
        sa.Column("information", sa.String(), nullable=False),
        sa.Column("rating_value", sa.Float(), nullable=True),
        sa.Column("rating_reviews", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "product_category",
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("sort_pos", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
        ),
        sa.PrimaryKeyConstraint("product_id", "category_id"),
    )
    op.create_table(
        "product_features",
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("feature_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["feature_id"],
            ["feature.id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
        ),
        sa.PrimaryKeyConstraint("product_id", "feature_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("product_features")
    op.drop_table("product_category")
    op.drop_table("product")
    op.drop_table("feature")
    op.drop_table("category")
    # ### end Alembic commands ###
